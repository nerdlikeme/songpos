{
  "_args": [
    [
      {
        "raw": "dtrie",
        "scope": null,
        "escapedName": "dtrie",
        "name": "dtrie",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\awesome\\Documents\\nodejsproj"
    ]
  ],
  "_from": "dtrie@latest",
  "_id": "dtrie@1.4.2",
  "_inCache": true,
  "_location": "/dtrie",
  "_npmUser": {
    "name": "mathieu",
    "email": "turcotte.mat@gmail.com"
  },
  "_npmVersion": "1.2.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dtrie",
    "scope": null,
    "escapedName": "dtrie",
    "name": "dtrie",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/dtrie/-/dtrie-1.4.2.tgz",
  "_shasum": "5a9c5aeb7e745308ddd1a4eed2105d4f8e68cbc9",
  "_shrinkwrap": null,
  "_spec": "dtrie",
  "_where": "C:\\Users\\awesome\\Documents\\nodejsproj",
  "author": {
    "name": "Mathieu Turcotte",
    "email": "turcotte.mat@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/MathieuTurcotte/node-trie/issues"
  },
  "dependencies": {},
  "description": "Trie implementation based on a minimal automaton.",
  "devDependencies": {
    "jshint": "0.9.0",
    "nodeunit": "0.7"
  },
  "directories": {},
  "dist": {
    "shasum": "5a9c5aeb7e745308ddd1a4eed2105d4f8e68cbc9",
    "tarball": "https://registry.npmjs.org/dtrie/-/dtrie-1.4.2.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/MathieuTurcotte/node-trie#readme",
  "keywords": [
    "trie",
    "prefix tree",
    "automaton",
    "automata",
    "fsa"
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "mathieu",
      "email": "turcotte.mat@gmail.com"
    }
  ],
  "name": "dtrie",
  "optionalDependencies": {},
  "readme": "# Trie implementation based on a minimal automaton for Node.js [![Build Status](https://secure.travis-ci.org/MathieuTurcotte/node-trie.png)](http://travis-ci.org/MathieuTurcotte/node-trie)\n\nImplementation based on \"[Incremental Construction of Minimal Acyclic\nFinite-State Automata](http://acl.ldc.upenn.edu/J/J00/J00-1002.pdf)\" by Jan\nDaciuk, Stoyan Mihov, Bruce W. Watson and Richard E. Watson.\n\n## Installation\n\n```\nnpm install dtrie\n```\n\n## Tests\n\nTo run the unit tests:\n\n```\nnpm test\n```\n\nTo run the performance/stress tests:\n\n```\nnpm run-script stress\n```\n\n## Usage\n\nBasic dictionary usage:\n\n```js\nvar dtrie = require('dtrie');\n\nvar trie = dtrie.createFromWords(['ai', 'aient', 'aime', 'aimer']);\n\nassert.ok(trie.contains('ai'));\nassert.ok(!trie.contains('aimerait'));\n```\n\n## API\n\n### dtrie.loadFromFile(filepath)\n\n- filepath: path to dictionary (one word per line, unix eol)\n\nConstruct a dictionary from a file.\n\n### dtrie.createFromWords(words)\n\n- words: a list of lowercase words\n\nConstruct a dictionary from a list of words.\n\n### Class Node\n\n#### new Node([id])\n\n- id: overwrite the generated id\n\nConstruct a new node.\n\n#### node.id\n\nNode's id, unique to each node.\n\n#### node.letters\n\nNode's transitions.\n\n#### node.hasChild(letter)\n\n- letter: transition label\n\nReturn true if this node has a child for the given transition.\n\n#### node.getChild(letter)\n\n- letter: transition label\n\nReturn the node child.\n\n#### node.accepts(suffix)\n\n- suffix: a suffix to check\n\nCheck if this node recognize the given suffix.\n\n#### node.isTerminal()\n\nReturn true if the current node is a terminal node.\n\n### Class Automaton\n\nThis class is a subclass of Node and represent an automaton.\n\n#### new Automaton()\n\nConstruct a new automaton.\n\n#### automaton.populate(words)\n\n- words: an alphabetically sorted list of lowercase words\n\nPopulate the automaton from an alphabetically sorted list of lowercase\nwords. This method should only be called once per automaton. Words must\ncontain letters within range [a-z].\n\n#### automaton.contains(word)\n\n- word: the word to lookup\n\nReturn true if the automaton recognize the given word.\n\n#### automaton.getSize()\n\nReturn the number of nodes in the automaton.\n\n## License\n\nThis code is free to use under the terms of the [MIT license](http://mturcotte.mit-license.org/).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MathieuTurcotte/node-trie.git"
  },
  "scripts": {
    "prepublish": "node_modules/jshint/bin/hint lib/ tests/ example/ index.js && node_modules/nodeunit/bin/nodeunit tests/unit",
    "pretest": "node_modules/jshint/bin/hint lib/ tests/ example/ index.js",
    "stress": "node tests/stress/test.js",
    "test": "node_modules/nodeunit/bin/nodeunit tests/unit"
  },
  "version": "1.4.2"
}
